import os
import pefile
import pandas as pd
class PEFile:
    
    def __init__(self,filename):

        self.pe = pefile.PE(filename,fast_load= True)

        self.filename=filename

        self.DebugSize= self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[6].Size

        self.DebugRVA= self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[6].VirtualAddress

        self.ImageVersion = self.pe.OPTIONAL_HEADER.MajorImageVersion

        self.OSVersion = self.pe.OPTIONAL_HEADER.MajorOperatingSystemVersion

        self.ExportRVA = self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[0].VirtualAddress

        self.ExportSize = self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[0].Size

        self.IATRVA = self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[12].VirtualAddress

        self.ResSize = self.pe.OPTIONAL_HEADER.DATA_DIRECTORY[2].Size

        self.LinkerVersion = self.pe.OPTIONAL_HEADER.MajorLinkerVersion
        
        self.NumberOfSections = self.pe.FILE_HEADER.NumberOfSections

        self.StackReserveSize = self.pe.OPTIONAL_HEADER.SizeOfStackReserve

        self.Dll = self.pe.OPTIONAL_HEADER.DllCharacteristics

    def Construct(self):

        sample = {}

        for attr,k in self.__dict__.iteritems():

            if( attr != "pe"):

                sample[attr]= k



        return sample

    @staticmethod
    def pe2vec():
        dataset={}
        for subdir, dirs, files in os.walk("/home/tejas_patel/NTL/clean files"):

            for f in files:
                file_path = os.path.join(subdir, f)

                try:
                    pe = PEFile(file_path)
                    dataset[str(f)] = pe.Construct()

                except Exception as e:
                        print(e)
        return dataset
# now that we have a dictionary let's put it in a clean csv file
    @staticmethod                    
    def vec2csv(dataset):

        
        df = pd.DataFrame(dataset)
        infected = df.transpose()  # transpose to have the features as columns and samples as rows
                                        

                    # utf-8 is prefered 
                        
        infected.to_csv('dataset_clean.csv',sep=',', encoding='utf-8')
            
        


       # def callboth(self):
        #    dataset=self.pe2vec()
         #   self.vec2csv(dataset)
    

dataset=PEFile.pe2vec()
PEFile.vec2csv(dataset)











  




